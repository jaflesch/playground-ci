"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6806],{706:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>u,contentTitle:()=>l,default:()=>h,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var a=t(4848),r=t(8453),o=t(1470),s=t(9365);const i={sidebar_position:1},l="Getting started",c={id:"guides/getting-started",title:"Getting started",description:"Instalation",source:"@site/docs/guides/getting-started.md",sourceDirName:"guides",slug:"/guides/getting-started",permalink:"/playground-ci/docs/guides/getting-started",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/guides/getting-started.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"Guides",permalink:"/playground-ci/docs/category/guides"},next:{title:"PokeApi class",permalink:"/playground-ci/docs/guides/pokeapi-class"}},u={},d=[{value:"Instalation",id:"instalation",level:2},{value:"Basic Usage",id:"basic-usage",level:2},{value:"Object-oriented",id:"object-oriented",level:3},{value:"Procedural",id:"procedural",level:3},{value:"Type annotations",id:"type-annotations",level:2},{value:"Pok\xe9API response",id:"pok\xe9api-response",level:3},{value:"Resource enumerables",id:"resource-enumerables",level:3},{value:"Pok\xe9mon utils",id:"pok\xe9mon-utils",level:2}];function p(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.h1,{id:"getting-started",children:"Getting started"}),"\n",(0,a.jsx)(n.h2,{id:"instalation",children:"Instalation"}),"\n",(0,a.jsxs)(n.p,{children:["Install ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@jaflesch/ts-pokeapi",children:"@jaflesch/ts-pokeapi"})," through your prefered package manager:"]}),"\n",(0,a.jsxs)(o.A,{groupId:"npm2yarn",children:[(0,a.jsx)(s.A,{value:"npm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"npm install @jaflesch/ts-pokeapi\n"})})}),(0,a.jsx)(s.A,{value:"yarn",label:"Yarn",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"yarn add @jaflesch/ts-pokeapi\n"})})}),(0,a.jsx)(s.A,{value:"pnpm",label:"pnpm",children:(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-bash",children:"pnpm add @jaflesch/ts-pokeapi\n"})})})]}),"\n",(0,a.jsx)(n.h2,{id:"basic-usage",children:"Basic Usage"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@jaflesch/ts-pokeapi",children:"TS-Pok\xe9API"})," provides two ways for fetching data to suit your needs: the ",(0,a.jsx)(n.strong,{children:"object-oriented"})," approach and the ",(0,a.jsx)(n.strong,{children:"procedural"})," approach."]}),"\n",(0,a.jsx)(n.h3,{id:"object-oriented",children:"Object-oriented"}),"\n",(0,a.jsxs)(n.p,{children:["We recommend the object-oriented approach when you want to keep reusing the same endpoint for fetching data, but changing API configurations between fetching; extending the ",(0,a.jsx)(n.code,{children:"class PokeApi"})," itself, or keeping the object-oriented pattern of your project."]}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { PokeApi } from '@jaflesch/ts-pokeapi';\n\nconst api = new PokeApi('pokemon');\nconst pokemon = await api.get(25);\nconsole.log(pokemon.name); // Outputs \"pikachu\"\n"})}),"\n",(0,a.jsx)(n.h3,{id:"procedural",children:"Procedural"}),"\n",(0,a.jsx)(n.p,{children:"We recommend the procedural approach when you a fast and more imediate way for fetching data form given endpoint, without handling and/or extending API configurations in your project."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { pokeapi } from '@jaflesch/ts-pokeapi';\n\nconst pokemon = await pokeapi('pokemon').get(906);\nconsole.log(pokemon.name); // Outputs \"sprigatito\"\n"})}),"\n",(0,a.jsx)(n.h2,{id:"type-annotations",children:"Type annotations"}),"\n",(0,a.jsx)(n.h3,{id:"pok\xe9api-response",children:"Pok\xe9API response"}),"\n",(0,a.jsxs)(n.p,{children:["For each Pok\xe9API endpoint response, there is an ",(0,a.jsx)(n.code,{children:"interface"})," that represents that response. In other words, when you fetch some data with ",(0,a.jsx)(n.code,{children:"PokeApi"})," class or ",(0,a.jsx)(n.code,{children:"pokeapi()"})," function, the response object is mapped and you can, safely, access any properties you want for parse the retrieved data."]}),"\n",(0,a.jsxs)(n.p,{children:["Also, every ",(0,a.jsx)(n.code,{children:"interface"})," is an exportable module, which you can use for your own type annotations."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"More details of every interface can be found here"})}),"\n",(0,a.jsx)(n.h3,{id:"resource-enumerables",children:"Resource enumerables"}),"\n",(0,a.jsxs)(n.p,{children:["Sometimes, you may want to fetch data by the actual ",(0,a.jsx)(n.code,{children:"id"})," of a resource. Since there is various resources for many endpoints, ",(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@jaflesch/ts-pokeapi",children:"TS-PokeAPI"})," provides enumerables with the resouce id to aid you in a more legible and maintanable way to fetch data."]}),"\n",(0,a.jsx)(n.p,{children:"The two code below provides the same outputs."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { pokeapi } from '@jaflesch/ts-pokeapi';\n\nconst pokemon = await pokeapi('pokemon').get(1);\nconsole.log(pokemon.name); // Outputs \"bulbasaur\"\n"})}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{className:"language-typescript",children:"import { pokeapi, PokemonId } from '@jaflesch/ts-pokeapi';\n\nconst pokemon = await pokeapi('pokemon').get(PokemonId.BULBASAUR);\nconsole.log(pokemon.name); // Outputs \"bulbasaur\"\n"})}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"More details of every enumerable can be found here"})}),"\n",(0,a.jsx)(n.h2,{id:"pok\xe9mon-utils",children:"Pok\xe9mon utils"}),"\n",(0,a.jsxs)(n.p,{children:[(0,a.jsx)(n.a,{href:"https://www.npmjs.com/package/@jaflesch/ts-pokeapi",children:"TS-Pok\xe9API"})," also provides a handful of utilities functions for Pok\xe9mon universe. For instance, there are main series Pok\xe9mon games formulas, such as stat calculation, stat validation, catching chance, damage output etc; Pok\xe9mon Showdown parsers and validators for competitive team building; and miscelaneous content which we are futher improving."]}),"\n",(0,a.jsx)(n.admonition,{type:"info",children:(0,a.jsx)(n.p,{children:"More details of every utility can be found here"})})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},9365:(e,n,t)=>{t.d(n,{A:()=>s});t(6540);var a=t(4164);const r={tabItem:"tabItem_Ymn6"};var o=t(4848);function s(e){let{children:n,hidden:t,className:s}=e;return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,s),hidden:t,children:n})}},1470:(e,n,t)=>{t.d(n,{A:()=>y});var a=t(6540),r=t(4164),o=t(3104),s=t(6347),i=t(205),l=t(7485),c=t(1682),u=t(9466);function d(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:n}=e;return!!n&&"object"==typeof n&&"value"in n}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function p(e){const{values:n,children:t}=e;return(0,a.useMemo)((()=>{const e=n??function(e){return d(e).map((e=>{let{props:{value:n,label:t,attributes:a,default:r}}=e;return{value:n,label:t,attributes:a,default:r}}))}(t);return function(e){const n=(0,c.X)(e,((e,n)=>e.value===n.value));if(n.length>0)throw new Error(`Docusaurus error: Duplicate values "${n.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[n,t])}function h(e){let{value:n,tabValues:t}=e;return t.some((e=>e.value===n))}function m(e){let{queryString:n=!1,groupId:t}=e;const r=(0,s.W6)(),o=function(e){let{queryString:n=!1,groupId:t}=e;if("string"==typeof n)return n;if(!1===n)return null;if(!0===n&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:n,groupId:t});return[(0,l.aZ)(o),(0,a.useCallback)((e=>{if(!o)return;const n=new URLSearchParams(r.location.search);n.set(o,e),r.replace({...r.location,search:n.toString()})}),[o,r])]}function f(e){const{defaultValue:n,queryString:t=!1,groupId:r}=e,o=p(e),[s,l]=(0,a.useState)((()=>function(e){let{defaultValue:n,tabValues:t}=e;if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(n){if(!h({value:n,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${n}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return n}const a=t.find((e=>e.default))??t[0];if(!a)throw new Error("Unexpected error: 0 tabValues");return a.value}({defaultValue:n,tabValues:o}))),[c,d]=m({queryString:t,groupId:r}),[f,g]=function(e){let{groupId:n}=e;const t=function(e){return e?`docusaurus.tab.${e}`:null}(n),[r,o]=(0,u.Dv)(t);return[r,(0,a.useCallback)((e=>{t&&o.set(e)}),[t,o])]}({groupId:r}),b=(()=>{const e=c??f;return h({value:e,tabValues:o})?e:null})();(0,i.A)((()=>{b&&l(b)}),[b]);return{selectedValue:s,selectValue:(0,a.useCallback)((e=>{if(!h({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);l(e),d(e),g(e)}),[d,g,o]),tabValues:o}}var g=t(2303);const b={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var j=t(4848);function k(e){let{className:n,block:t,selectedValue:a,selectValue:s,tabValues:i}=e;const l=[],{blockElementScrollPositionUntilNextRender:c}=(0,o.a_)(),u=e=>{const n=e.currentTarget,t=l.indexOf(n),r=i[t].value;r!==a&&(c(n),s(r))},d=e=>{let n=null;switch(e.key){case"Enter":u(e);break;case"ArrowRight":{const t=l.indexOf(e.currentTarget)+1;n=l[t]??l[0];break}case"ArrowLeft":{const t=l.indexOf(e.currentTarget)-1;n=l[t]??l[l.length-1];break}}n?.focus()};return(0,j.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},n),children:i.map((e=>{let{value:n,label:t,attributes:o}=e;return(0,j.jsx)("li",{role:"tab",tabIndex:a===n?0:-1,"aria-selected":a===n,ref:e=>l.push(e),onKeyDown:d,onClick:u,...o,className:(0,r.A)("tabs__item",b.tabItem,o?.className,{"tabs__item--active":a===n}),children:t??n},n)}))})}function v(e){let{lazy:n,children:t,selectedValue:r}=e;const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(n){const e=o.find((e=>e.props.value===r));return e?(0,a.cloneElement)(e,{className:"margin-top--md"}):null}return(0,j.jsx)("div",{className:"margin-top--md",children:o.map(((e,n)=>(0,a.cloneElement)(e,{key:n,hidden:e.props.value!==r})))})}function x(e){const n=f(e);return(0,j.jsxs)("div",{className:(0,r.A)("tabs-container",b.tabList),children:[(0,j.jsx)(k,{...e,...n}),(0,j.jsx)(v,{...e,...n})]})}function y(e){const n=(0,g.A)();return(0,j.jsx)(x,{...e,children:d(e.children)},String(n))}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>i});var a=t(6540);const r={},o=a.createContext(r);function s(e){const n=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function i(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),a.createElement(o.Provider,{value:n},e.children)}}}]);