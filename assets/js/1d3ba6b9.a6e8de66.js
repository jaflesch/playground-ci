"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[7321],{3647:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>c,contentTitle:()=>i,default:()=>o,frontMatter:()=>d,metadata:()=>l,toc:()=>a});var s=r(4848),t=r(8453);const d={sidebar_position:3},i="Type Chart",l={id:"pokemon-type/chart",title:"Type Chart",description:"A stat refers to any of several parameters pertaining to Pok\xe9mon that can affect turn order, move success, and damage output during a battle. With exception to the HP stat, a Pok\xe9mon's stat can also be temporarily raised or lowered in stages during battle through various effects.",source:"@site/docs/pokemon-type/chart.md",sourceDirName:"pokemon-type",slug:"/pokemon-type/chart",permalink:"/playground-ci/docs/pokemon-type/chart",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/pokemon-type/chart.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Format",permalink:"/playground-ci/docs/pokemon-type/format"},next:{title:"Utils",permalink:"/playground-ci/docs/category/utils"}},c={},a=[{value:"Methods",id:"methods",level:2},{value:"getPokemonTypeChartAttack()",id:"getpokemontypechartattack",level:3},{value:"Signature",id:"signature",level:4},{value:"Returns",id:"returns",level:4},{value:"Examples",id:"examples",level:4},{value:"getPokemonTypeChartAttackPros()",id:"getpokemontypechartattackpros",level:3},{value:"Signature",id:"signature-1",level:4},{value:"Returns",id:"returns-1",level:4},{value:"Examples",id:"examples-1",level:4},{value:"getPokemonTypeChartAttackCons()",id:"getpokemontypechartattackcons",level:3},{value:"Signature",id:"signature-2",level:4},{value:"Returns",id:"returns-2",level:4},{value:"Examples",id:"examples-2",level:4},{value:"getPokemonTypeChartDefense()",id:"getpokemontypechartdefense",level:3},{value:"Signature",id:"signature-3",level:4},{value:"Returns",id:"returns-3",level:4},{value:"Examples",id:"examples-3",level:4},{value:"getPokemonTypeChartDefensePros()",id:"getpokemontypechartdefensepros",level:3},{value:"Signature",id:"signature-4",level:4},{value:"Returns",id:"returns-4",level:4},{value:"Examples",id:"examples-4",level:4},{value:"getPokemonTypeChartDefenseCons()",id:"getpokemontypechartdefensecons",level:3},{value:"Signature",id:"signature-5",level:4},{value:"Returns",id:"returns-5",level:4},{value:"Examples",id:"examples-5",level:4},{value:"getAttackMultipleByTypeChart()",id:"getattackmultiplebytypechart",level:3},{value:"Signature",id:"signature-6",level:4},{value:"Returns",id:"returns-6",level:4},{value:"Examples",id:"examples-6",level:4},{value:"getPokemonTypeMatchups()",id:"getpokemontypematchups",level:3},{value:"Signature",id:"signature-7",level:4},{value:"Returns",id:"returns-7",level:4},{value:"Examples",id:"examples-7",level:4},{value:"isMoveNullifyByAbility()",id:"ismovenullifybyability",level:3},{value:"Signature",id:"signature-8",level:4},{value:"Returns",id:"returns-8",level:4},{value:"Examples",id:"examples-8",level:4},{value:"damageMultipleByAbility()",id:"damagemultiplebyability",level:3},{value:"Signature",id:"signature-9",level:4},{value:"Returns",id:"returns-9",level:4},{value:"Examples",id:"examples-9",level:4},{value:"superEffectiveDamageMultipleByAbility()",id:"supereffectivedamagemultiplebyability",level:3},{value:"Signature",id:"signature-10",level:4},{value:"Returns",id:"returns-10",level:4},{value:"Examples",id:"examples-10",level:4},{value:"Type Definitions",id:"type-definitions",level:2},{value:"TypeChartReturn",id:"typechartreturn",level:3},{value:"Properties",id:"properties",level:4},{value:"TypeChartReturnDamageReduction",id:"typechartreturndamagereduction",level:3},{value:"Properties",id:"properties-1",level:4},{value:"GetPokemonTypeMatchupsReturn",id:"getpokemontypematchupsreturn",level:3},{value:"Properties",id:"properties-2",level:4}];function h(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"type-chart",children:"Type Chart"}),"\n",(0,s.jsx)(n.p,{children:"A stat refers to any of several parameters pertaining to Pok\xe9mon that can affect turn order, move success, and damage output during a battle. With exception to the HP stat, a Pok\xe9mon's stat can also be temporarily raised or lowered in stages during battle through various effects."}),"\n",(0,s.jsx)(n.admonition,{type:"info",children:(0,s.jsxs)(n.p,{children:["See more on ",(0,s.jsx)(n.a,{href:"https://bulbapedia.bulbagarden.net/wiki/Stat",children:"Bulbapedia"}),"."]})}),"\n",(0,s.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartattack",children:"getPokemonTypeChartAttack()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns types which given type's attack has no effet, is normal, not effective, and super effective. Also, returns an array of PokemonTypesArrayIndex with damage multiples for given type. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttack(index: PokemonTypesArrayIndex) => TypeChartReturn\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An object with complete type chart, and normal, no effect, super effective, not effective types against given type."}),"\n",(0,s.jsx)(n.h4,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttack(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartattackpros",children:"getPokemonTypeChartAttackPros()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns only types which given type's attack has super effective damage. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-1",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttackPros(index: PokemonTypesArrayIndex) => PokemonTypesArrayIndex[]\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-1",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An array of indexes from Pok\xe9mon types chart where given Pok\xe9mon type is super effective."}),"\n",(0,s.jsx)(n.h4,{id:"examples-1",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttackPros(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartattackcons",children:"getPokemonTypeChartAttackCons()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns only types which given type's attack has no effect or not effective damage. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-2",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttackCons(index: PokemonTypesArrayIndex) => TypeChartReturnDamageReduction\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-2",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An object with array of indexes from Pok\xe9mon types chart where given Pok\xe9mon type is not effective nor has effect."}),"\n",(0,s.jsx)(n.h4,{id:"examples-2",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartAttackCons(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartdefense",children:"getPokemonTypeChartDefense()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns types which given type's defense has no effet, is normal, not effective, and super effective. Also, returns an array of PokemonTypesArrayIndex with damage multiples for given type. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-3",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefense(index: PokemonTypesArrayIndex) => TypeChartReturn\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-3",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An object with array of indexes from Pok\xe9mon types chart."}),"\n",(0,s.jsx)(n.h4,{id:"examples-3",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefense(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartdefensepros",children:"getPokemonTypeChartDefensePros()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns only types which given type's defense has resistance. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-4",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefensePros(index: PokemonTypesArrayIndex) => TypeChartReturnDamageReduction\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-4",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An object with array of indexes from Pok\xe9mon types chart."}),"\n",(0,s.jsx)(n.h4,{id:"examples-4",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefensePros(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypechartdefensecons",children:"getPokemonTypeChartDefenseCons()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns only types which given type's defense has weakness. See more about the ",(0,s.jsx)(n.code,{children:"TYPES_CHART_MATRIX"})," at ",(0,s.jsx)(n.a,{href:"https://pokemondb.net/type",children:"PokemonDB"}),". The index 0 stands for NORMAL type, index 1 stands for FIRE type etc."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-5",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefenseCons(index: PokemonTypesArrayIndex) => PokemonTypesArrayIndex[]\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsx)("tbody",{children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"index"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"An index from Pok\xe9mon types chart matrix."})]})})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-5",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"An object with array of indexes from Pok\xe9mon types chart."}),"\n",(0,s.jsx)(n.h4,{id:"examples-5",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getPokemonTypeChartDefenseCons(PokemonTypesArrayIndex.FIRE); // returns 328\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getattackmultiplebytypechart",children:"getAttackMultipleByTypeChart()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the damage multiplier considering the attacking move type, the targeted Pok\xe9mon types and ability."}),"\n",(0,s.jsx)(n.h4,{id:"signature-6",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getAttackMultipleByTypeChart(\n  moveType: PokemonTypesArrayIndex,\n  targetType: PokemonTypesArrayIndex[],\n  targetAbility?: AlterDamageAbility,\n) => number\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"moveType"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The type of move that will produce the damage."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"targetTypes"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<PokemonTypesArrayIndex>"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The types of target Pok\xe9mon which will receive the damage."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"targetAbility"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#alterdamageability",children:(0,s.jsx)(n.code,{children:"AlterDamageAbility"})})}),(0,s.jsx)("td",{children:"No"}),(0,s.jsx)("td",{children:"A string of few selected abilities which affect damage calculation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-6",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"The damage multiplier."}),"\n",(0,s.jsx)(n.h4,{id:"examples-6",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getAttackMultipleByTypeChart(\n  PokemonTypesArrayIndex.GROUND, \n  [PokemonTypesArrayIndex.FIRE, PokemonTypesArrayIndex.ELECTRIC],\n  'levitate'\n); // returns 0\n"})}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypematchups",children:"getPokemonTypeMatchups()"}),"\n",(0,s.jsxs)(n.p,{children:["Returns a detailed offensive an defensive data from given Pok\xe9API Pok\xe9mon resource. It also returns the Pok\xe9mon types converted from Type resource id to ",(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"}),"."]}),"\n",(0,s.jsx)(n.h4,{id:"signature-7",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"getAttackMultipleByTypeChart(pokemon: Pokemon, verbose?: boolean) => GetPokemonTypeMatchupsReturn\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"pokemon"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../../poke-api/interfaces/pokemon#pokemon",children:(0,s.jsx)(n.code,{children:"Pokemon"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The Pok\xe9API Pok\xe9mon resource."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"verbose"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"boolean"})}),(0,s.jsx)("td",{children:"No"}),(0,s.jsx)("td",{children:"True if defensive data will return the type names instead of its indexes."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-7",children:"Returns"}),"\n",(0,s.jsxs)(n.p,{children:["An ",(0,s.jsx)(n.a,{href:"#getpokemontypematchupsreturn",children:(0,s.jsx)(n.code,{children:"GetPokemonTypeMatchupsReturn"})})," object with detailed offensive an defensive data."]}),"\n",(0,s.jsx)(n.h4,{id:"examples-7",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"const pokemon = pokeapi('charizard').get();\ngetPokemonTypeMatchups(pokemon, true);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"ismovenullifybyability",children:"isMoveNullifyByAbility()"}),"\n",(0,s.jsx)(n.p,{children:"Returns true if ability is immune to type of given move; false otherwise."}),"\n",(0,s.jsx)(n.h4,{id:"signature-8",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"isMoveNullifyByAbility(move: PokemonTypesArrayIndex, ability: AlterDamageAbility) => boolean\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"moveType"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The type of attacking move."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"ability"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#alterdamageability",children:(0,s.jsx)(n.code,{children:"AlterDamageAbility"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"A string of few selected abilities which affect damage calculation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-8",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"A boolean with value true if ability receives no damage from given move type."}),"\n",(0,s.jsx)(n.h4,{id:"examples-8",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"isMoveNullifyByAbility(PokemonTypesArrayIndex.WATER, 'storm-drain'); // returns true\n"})}),"\n",(0,s.jsx)(n.h3,{id:"damagemultiplebyability",children:"damageMultipleByAbility()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the damage multiple of attacking move by oponent's ability."}),"\n",(0,s.jsx)(n.h4,{id:"signature-9",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"damageMultipleByAbility(move: PokemonTypesArrayIndex, ability: AlterDamageAbility) => number\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"moveType"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The type of attacking move."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"ability"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#alterdamageability",children:(0,s.jsx)(n.code,{children:"AlterDamageAbility"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"A string of few selected abilities which affect damage calculation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-9",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"The damage multiple."}),"\n",(0,s.jsx)(n.h4,{id:"examples-9",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"damageMultipleByAbility(PokemonTypesArrayIndex.GHOST, 'purifying-salt'); // returns 0.5\n"})}),"\n",(0,s.jsx)(n.h3,{id:"supereffectivedamagemultiplebyability",children:"superEffectiveDamageMultipleByAbility()"}),"\n",(0,s.jsx)(n.p,{children:"Returns the correct super effective damage multiple applied to a oponent's ability."}),"\n",(0,s.jsx)(n.h4,{id:"signature-10",children:"Signature"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"superEffectiveDamageMultipleByAbility(multiple: number, ability: AlterDamageAbility) => number\n"})}),"\n",(0,s.jsxs)("table",{class:"full-width",children:[(0,s.jsx)("thead",{class:"upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{width:"15%",children:"Parameter"}),(0,s.jsx)("th",{width:"15%",children:"Type"}),(0,s.jsx)("th",{width:"15%",children:"Required"}),(0,s.jsx)("th",{children:"Description"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"multiple"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"number"})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"The current damage multiplier."})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"ability"})}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#alterdamageability",children:(0,s.jsx)(n.code,{children:"AlterDamageAbility"})})}),(0,s.jsx)("td",{children:"Yes"}),(0,s.jsx)("td",{children:"A string of few selected abilities which affect damage calculation."})]})]})]}),"\n",(0,s.jsx)(n.h4,{id:"returns-10",children:"Returns"}),"\n",(0,s.jsx)(n.p,{children:"The super effective damage multiple."}),"\n",(0,s.jsx)(n.h4,{id:"examples-10",children:"Examples"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-typescript",children:"superEffectiveDamageMultipleByAbility(0.5, 'wonder-guard'); // returns 0\nsuperEffectiveDamageMultipleByAbility(1, 'wonder-guard'); // returns 0\nsuperEffectiveDamageMultipleByAbility(2, 'wonder-guard'); // returns 2\n\nsuperEffectiveDamageMultipleByAbility(1, 'prism-armor'); // returns 1\nsuperEffectiveDamageMultipleByAbility(2, 'prism-armor'); // returns 0.75\n"})}),"\n",(0,s.jsx)(n.h2,{id:"type-definitions",children:"Type Definitions"}),"\n",(0,s.jsx)(n.h3,{id:"typechartreturn",children:"TypeChartReturn"}),"\n",(0,s.jsxs)(n.p,{children:["An interface to determine the Pok\xe9mon's final stat value with ",(0,s.jsx)(n.a,{href:"#getstatvalue",children:(0,s.jsx)(n.code,{children:"getStatValue()"})}),"."]}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{children:"Type"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("td",{children:"Interface"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"properties",children:"Properties"}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Name"}),(0,s.jsx)("th",{children:"Required"}),(0,s.jsx)("th",{children:"Type"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"normal"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"noEffect"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"notEffective"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"superEffective"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"chart"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"typechartreturndamagereduction",children:"TypeChartReturnDamageReduction"}),"\n",(0,s.jsxs)(n.p,{children:["An interface to determine the Pok\xe9mon's final stat value with ",(0,s.jsx)(n.a,{href:"#getstatvalue",children:(0,s.jsx)(n.code,{children:"getStatValue()"})}),"."]}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{children:"Type"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("td",{children:"Interface"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"properties-1",children:"Properties"}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Name"}),(0,s.jsx)("th",{children:"Required"}),(0,s.jsx)("th",{children:"Type"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"noEffect"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"notEffective"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]})]})]}),"\n",(0,s.jsx)(n.h3,{id:"getpokemontypematchupsreturn",children:"GetPokemonTypeMatchupsReturn"}),"\n",(0,s.jsxs)(n.p,{children:["An interface to determine the Pok\xe9mon's final stat value with ",(0,s.jsx)(n.a,{href:"#getpokemontypematchups",children:(0,s.jsx)(n.code,{children:"getPokemonTypeMatchups()"})}),"."]}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsx)("tr",{children:(0,s.jsx)("th",{children:"Type"})})}),(0,s.jsx)("tbody",{children:(0,s.jsx)("tr",{children:(0,s.jsx)("td",{children:"Interface"})})})]}),"\n",(0,s.jsx)(n.h4,{id:"properties-2",children:"Properties"}),"\n",(0,s.jsxs)("table",{className:"full-width",children:[(0,s.jsx)("thead",{className:"left upc",children:(0,s.jsxs)("tr",{children:[(0,s.jsx)("th",{children:"Name"}),(0,s.jsx)("th",{children:"Required"}),(0,s.jsx)("th",{children:"Type"})]})}),(0,s.jsxs)("tbody",{children:[(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"types"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"Array<object>"})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.normal"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.noEffect"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.notEffective"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.superEffective"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.chart"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.typeIndex"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"PokemonTypesArrayIndex"})})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"offensive.name"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"Array<object>"})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.ability"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"string"})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.normal"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.noEffect"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.weakness"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.resistance"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.doubleWeakness"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]}),(0,s.jsxs)("tr",{children:[(0,s.jsx)("td",{children:(0,s.jsx)(n.code,{children:"defensive.doubleResistance"})}),(0,s.jsx)("td",{children:" Yes "}),(0,s.jsx)("td",{children:(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"../constants#pokemontypesarrayindex",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypesArrayIndex]>"})}),", or\n",(0,s.jsx)(n.a,{href:"../constants#pokemontypename",children:(0,s.jsx)(n.code,{children:"Array<[PokemonTypeName]>"})})]})})]})]})]})]})}function o(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(h,{...e})}):h(e)}},8453:(e,n,r)=>{r.d(n,{R:()=>i,x:()=>l});var s=r(6540);const t={},d=s.createContext(t);function i(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);